server {
    listen       80; # 监听端口
    server_name  localhost; # 域名可以有多个,用空格隔开
    #rewrite ^(.*) https://$server_name$1 permanent; # HTTP 自动跳转 HTTPS

    proxy_redirect off; # 只要用户在浏览器中访问的域名绑定了 VIP VIP 下面有RS；则就用$host ；host是访问URL中的域名和端口  www.taobao.com:80
    proxy_set_header Host $host; # host
    proxy_set_header X-Real-IP $remote_addr; # 把源IP 【$remote_addr,建立HTTP连接header里面的信息】赋值给X-Real-IP;这样在代码中 $X-Real-IP来获取 源IP
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;# 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
    proxy_set_header X-Forwarded-Proto $scheme; # 头部可以帮助后端服务器获取请求的协议信息。
    proxy_set_header X-Forwarded-Port $server_port; # 后端服务器需要知道请求的端口号
    # deny 127.0.0.1;  #拒绝的ip
    # allow 172.18.5.54; #允许的ip

    # 增强：防止Host头伪造
    if ($host !~* ^(your-domain.com|www.your-domain.com)$ ) {
        return 444;
    }

    # 增强：防止访问actuator
    location ~ ^/(.*/)?actuator(/|$) {
        return 444;
    }
    # 静态页面
    location / {
        root   html;
        index  index.html index.htm;
    }

    # Vue 打包后
    # ^~/h5 匹配以 /h5 开头的路径，例如 /h5/foo 或 /h5/bar 优先级高于其他普通前缀匹配规则
    # /h5 只有在没有匹配到 ^~/h5 规则时才会执行该规则
    # Nginx的location优先级规则：'= 精确匹配 (最高)' >  '^~ 前缀优先匹配' > '~ 正则匹配 (按配置顺序)' > '普通前缀匹配'
    location ^~/h5 {
        alias  /server/gl/h5/;
        index index.html;
        try_files $uri $uri/ /h5/index.html;
    }

    # Java服务
    location /api {
        proxy_pass http://127.0.0.1:8000; #这里的端口记得改成项目对应的哦
    }

    # Websocket
    location /ws {
        proxy_pass http://127.0.0.1:58080/ws
        proxy_set_header Upgrade $http_upgrade; # 在 HTTP 协议基础上进行升级，适配websocket
        proxy_set_header Connection "upgrade"; # 在 HTTP 协议基础上进行升级，适配websocket
    }

    # 404页面
    error_page  404              /404.html;

    # 其他错误页面
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

}
